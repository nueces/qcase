---

name: "QWeb Application build and release"

on:
  push:
    branches:
      - master
    paths:
      - applications/qweb/**

  pull_request:
    branches:
      - master
    paths:
      - applications/qweb/**

  workflow_dispatch:
    branches:
      - master

  # Run after the workflow "Organization Infrastructure Deployment" to publish a first image
  workflow_run:
    workflows:
      - "Organization Infrastructure Deployment"
    types:
     - completed
    branches:
      - master

env:
  ENV: ${{ vars.ENV }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  terraform:
    name: "Image Building"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3.5.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.1

      - name: Set up Python
        uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.10.12

      - name: Create virtualenv and install project dependencies
        id: dependencies
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "stdout<<$EOF" >> "$GITHUB_OUTPUT"
          python3 -m venv venv  >> "$GITHUB_OUTPUT"
          ./venv/bin/pip install --requirement requirements.txt  >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

      - name: Build and tag the application image.
        id: build
        working-directory: ./applications/qweb
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "stdout<<$EOF" >> "$GITHUB_OUTPUT"
          make build tag >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"

      - name: Create a PR comment with the build output
        uses: actions/github-script@v6.4.1
        id: comment
        if: github.event_name == 'pull_request'
        with:
          script: |
            const output = `\#### Project dependencies install outcome:  \`${{ steps.dependencies.outcome }}\`
            #### Build application image outcome: \`${{ steps.build.outcome }}\`
            <details>
            <summary>Dependencies install log</summary>

            \`\`\`sh\n
            ${{ steps.dependencies.outputs.stdout }}
            \`\`\`
            </details>

            <details>
            <summary>Show build application image log</summary>

            \`\`\`sh\n
            ${{ steps.build.outputs.stdout }}
            \`\`\`
            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.rest.issues.createComment({
             issue_number: context.issue.number,
             owner: context.repo.owner,
             repo: context.repo.repo,
             body: output
            })

      - name: Build Status
        id: status
        if: steps.build.outcome == 'failure'
        run: exit 1

      - name: Push the application image to Amazon ECR
        id: publish
        working-directory: ./applications/qweb
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        if: |
          github.ref == 'refs/heads/master' && (
            github.event_name == 'push' ||
            github.event_name == 'workflow_dispatch' ||
            (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
          )
        run: make push
