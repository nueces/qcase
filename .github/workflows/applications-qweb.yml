---

name: "QWeb Application build and release"

on:
  push:
    branches:
      - master
    paths:
      - applications/qweb/**

#  TODO: Add a testsuite to run on the pull request and include the lint check
#  pull_request:
#    branches:
#      - master
#    paths:
#      - applications/qweb/**

  workflow_dispatch:
    branches:
      - master

  # Run after the workflow "Organization Infrastructure Deployment" to publish a first image
  workflow_run:
    workflows:
      - "Organization Infrastructure Deployment"
    types:
     - completed
    branches:
      - master

env:
  ENV: ${{ vars.ENV }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}

jobs:
  terraform:
    name: "Image Building"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v3.5.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1.6.1

      - name: Set up Python
        uses: actions/setup-python@v4.6.1
        with:
          python-version: 3.10.12

      - name: Create virtualenv and install project dependencies
        run: |
          python3 -m venv venv
          ./venv/bin/pip install --requirement requirements.txt

      - name: Build, tag, and push the image to Amazon ECR
        id: publish
        working-directory: ./applications/qweb
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          make build tag push

      - uses: actions/github-script@v6.4.1
        id: comment
        if: github.event_name == 'pull_request'
        env:
          OUTPUT: "${{ steps.publish.outputs.stdout }}"

        with:
          script: |
            const output = `#### Publish outcome: \`${{ steps.publish.outcome }}\`
            
            <details>
            <summary>Show build log</summary>

            \`\`\`sh\n
            ${process.env.OUTPUT}
            \`\`\`
            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
            github.rest.issues.createComment({
             issue_number: context.issue.number,
             owner: context.repo.owner,
             repo: context.repo.repo,
             body: output
            })
